<script>
(function() {
  var config = window.staticConfig;
  var root = '<%=STATIC_DOMAIN%>';
  var get = function(key) {
    return window.localStorage?localStorage.getItem(key):false;
  }
  var set = function(key, value) {
    return window.localStorage?localStorage.setItem(key, value):false;
  }
  var _xhr;
  var httpGet = function(url, callback) {
    var _xhr = null;
    try {
      _xhr = new window.XMLHttpRequest();
    } catch(ex) {
      try {
        _xhr = new ActiveXObject("Msxml2.XMLHTTP");
      } catch(ex) {
      }
    }
    _xhr.onreadystatechange = function() {
      try {
        if (_xhr.readyState == 4 && _xhr.status == 200) {
          callback(_xhr.responseText);
        }
      } catch(ex) {

      }
    }
    _xhr.open('get', url, false);
    _xhr.send(null)
  }

  var _loader = function(path) {
    var src = root + path;
    var version = config[path];
    var data = get(path);
    if ( data!== null && get(path + 'version') == version && window.localStorage) {
      if (/\.css/.test(path)) {
        data = data.replace(/img\//gi,root+'/touch/css/img/');
        var stylesheet = '<style type="text/css">' + data + '<\/style>';
        document.write(stylesheet);
      } else {
        var script = '<script>' + data + '<\/script>';
        document.write(script);
      }
    } else {
      if (/\.css/.test(path)) {
        document.write('<link rel="stylesheet" type="text/css" href="' + src + '" />');
      } else {
        document.write('<script src="' + src + '"><\/script>');
      }
      if(window.localStorage){
	      httpGet(src, function(txt) {
		set(path, txt);
		set(path + 'version', version);
	     });
      }
    }

  }

  var loader = function(arr){
    var count = arr.length;
    for(var i=0;i<count;i++){
        _loader(arr[i]);
    }
  }

  var cacheImage = function(img){
			if(document.getElementById('cache_cvs')==null){
				var cvs = document.createElement('canvas');
				cvs.width = 140;
				cvs.height = 108;
				cvs.id = 'cache_cvs';
				document.body.appendChild(cvs);
			}
			var cvs = document.getElementById('cache_cvs')
			var rcvs = cvs.getContext('2d');
			rcvs.drawImage(img,0,0,140,108);
			var data = cvs.toDataURL();
			debugger
  }
  window.Loader = loader;
  window.cacheImage = cacheImage;
  window.SET = set;
  window.GET = get;
})(); 
</script>